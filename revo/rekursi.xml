<?xml version="1.0"?>
<!DOCTYPE vortaro SYSTEM "../dtd/vokoxml.dtd">
<vortaro>
  <art mrk="$Id: rekursi.xml,v 1.9 2024/04/13 20:15:52 revo Exp $">
    <kap>
      <rad>rekursi</rad>/o <fnt><bib>KompLeks</bib></fnt>
    </kap>
    <drv mrk="rekursi.0o">
      <kap><tld/>o</kap>
      <snc mrk="rekursi.0o.MAT">
        <uzo tip="fak">MAT</uzo>
        <uzo tip="fak">KOMP</uzo>
        <dif>
          Tia maniero difini funkcion a&ubreve; komputan proceduron, ke la
          difinato eventuale povas referenci sin mem:
          <ekz>
            <ind>senfina <tld/>o</ind>
            <klr>(ekz-e ka&ubreve;zita de cirkla difino)</klr>.
            <trd lng="be">&c_b;&c_ja;&c_s;&c_k;&c_o;&c_n;&c_c;&c_a;&c_ja; &c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_ja;</trd>
            <trd lng="en">infinite recursion</trd>
            <trd lng="ru">&c_b;&c_je;&c_s;&c_k;&c_o;&c_n;&c_je;&c_ch;&c_n;&c_a;&c_ja; &c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_ja;</trd>
          </ekz>
        </dif>
      </snc>
      <ref tip="sub" cel="rikur.0o.MAT">rikuro<sncref/></ref>
      <rim>
        Kaj <ctl><tld/>o</ctl>, kaj <ctl>rikuro</ctl> etimologie
        signifas <ctl>retroiro</ctl>, t.e. reveno al la anta&ubreve;e
        komputitaj valoroj de iu vico por komputi la sekvan. Pri la
        termino <ctl><tld/>o</ctl> tiu koncepto ne plu validas:
        <tld/>a komputo povas anticipe ekzameni anka&ubreve;
        siajn <ctl>postajn</ctl> valorojn, e&ccirc; plenumi
        <ref cel="sercx.elcxerpa0o">el&ccirc;erpan ser&ccirc;on</ref> tra ili.
        Tion oni neniam faras en la klasika matematiko, por kies
        bezonoj plene sufi&ccirc;as rikuro, koncepto logike pli sekura.
        <aut>Sergio Pokrovskij</aut>
      </rim>
      <trd lng="be">&c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_ja;</trd>
      <trd lng="en">recursion</trd>
      <trd lng="pl">rekurencja</trd>
      <trd lng="ru">&c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_ja;</trd>
      <trd lng="uk">&c_r;&c_je;&#x43A;&c_u;&c_r;&c_s;&c_ib;&#x44F;</trd>
  <trdgrp lng="zh">
    <trd>&#x9012;&#x63A8; <pr>d&#xEC;tu&#x12B;</pr></trd>,
    <trd>&#x905E;&#x63A8; <pr>d&#xEC;tu&#x12B;</pr></trd>,
    <trd>&#x9012;&#x5F52; <pr>d&#xEC;gu&#x12B;</pr></trd>,
    <trd>&#x905E;&#x6B78; <pr>d&#xEC;gu&#x12B;</pr></trd>
  </trdgrp>
</drv>

    <drv mrk="rekursi.0a">
      <kap><tld/>a</kap>
      <snc>
        <uzo tip="fak">MAT</uzo>
        <uzo tip="fak">KOMP</uzo>
        <dif>
          Uzanta <tld/>on, karakterizata de <tld/>o:
          <ekz>
            <ind><tld/>a proceduro</ind>
            <klr>(programlingva
              <ref cel="proced1.0o.KOMP">proceduro<sncref/></ref> kiu
              eventuale vokas sin mem dum la rultempo)</klr>;
              <trd lng="be">&c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_w;&c_n;&c_a;&c_ja; &c_p;&c_r;&c_a;&c_c;&c_e;&c_d;&c_u;&c_r;&c_a;</trd>
            <trd lng="en">recursive procedure</trd>
            <trd lng="ru">&c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_v;&c_n;&c_a;&c_ja; &c_p;&c_r;&c_o;&c_c;&c_je;&c_d;&c_u;&c_r;&c_a;</trd>
          </ekz>
        </dif>
        <ref tip="sub" cel="rikur.0o.MAT">rikura<sncref/></ref>
      </snc>
      <trd lng="be">&c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_w;&c_n;&c_y;</trd>
      <trd lng="en">recursive</trd>
      <trdgrp lng="pl">
        <trd>rekurencyjny</trd>,
        <trd>zagnie&zdot;d&zdot;ony</trd>
      </trdgrp>
      <trd lng="ru">&c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_v;&c_n;&c_y;&c_j;</trd>
      <trd lng="uk">&c_r;&c_je;&#x43A;&c_u;&c_r;&c_s;&c_i;&c_v;&#x43D;&c_i;&c_j;</trd>
  <trdgrp lng="zh">
    <trd>&#x9012;&#x63A8; <pr>d&#xEC;tu&#x12B;</pr></trd>,
    <trd>&#x905E;&#x63A8; <pr>d&#xEC;tu&#x12B;</pr></trd>,
    <trd>&#x9012;&#x5F52; <pr>d&#xEC;gu&#x12B;</pr></trd>,
    <trd>&#x905E;&#x6B78; <pr>d&#xEC;gu&#x12B;</pr></trd>
  </trdgrp>
</drv>

    <drv mrk="rekursi.0afunkcio">
      <kap><tld/>a funkcio</kap>
      <snc mrk="rekursi.0afunkcio.MAT">
        <uzo tip="fak">MAT</uzo>
        <dif>
          Unu el la matematikaj precizigoj de la intuicia koncepto pri
          <ref cel="komput.0ebla">komputeblo</ref>. Oni reduktas &ccirc;iujn
          komputajn problemojn al
          <ref cel="nombr.natura0o">naturnombraj</ref>
          <ref cel="funkci.0o.MATEM">funkcioj<sncref/></ref>
          <frm am="N^n -&gt;N">N&#x207F;&#x2192;N</frm>, kaj konstruas hierarkion el 3
          subklasoj:
          <refgrp tip="sub">
            <ref cel="rekursi.primitive0afunkcio">primitive <tld/>aj
            funkcioj</ref>,
            <ref cel="rekursi.cxiea0afunkcio">&ccirc;ieaj <tld/>aj
            funkcioj</ref>,
            <ref cel="rekursi.mu0afunkcio">&my;-<tld/>aj funkcioj</ref>
          </refgrp>.
          La lasta klaso estas la plej &gcirc;enerala, &gcirc;i entenas la du
          aliajn kaj reprezentas &ccirc;iujn komputeblajn funkciojn. Se oni
          diras simple <ctl><tld/>a funkcio</ctl>, tiam oni celas
          &gcirc;uste tiun &ccirc;i klason:
          <ekz>
            simbole la hierarkion de la <tld/>aj funkcioj eblas
            prezenti per la formulo <frm am="&quot;PRF&quot; sub &quot;&Ccirc;RF&quot; sub             &quot;MRF&quot;">PRF &#x2282; &Ccirc;RF &#x2282; MRF</frm>;
          </ekz><ekz>
            estas pruvite, ke la klaso da <tld/>aj funkcioj, la
            klaso da funkcioj difineblaj per Turinga a&ubreve;tomato, per
            &lambda;-kalkulo, per la Markovaj &ccirc;enoj estas &ccirc;iuj egalaj.
          </ekz>
        </dif>
      </snc>
      <trd lng="be">&c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_w;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_y;&c_ja;</trd>
      <trd lng="en">recursive function</trd>
      <trd lng="pl">funkcja rekurencyjna<klr>  (mat.)</klr></trd>
      <trd lng="ru">&c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_v;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_i;&c_ja;</trd>
    </drv>

    <drv mrk="rekursi.primitive0afunkcio">
      <kap>primitive <tld/>a funkcio,
        <var><kap>PRF</kap></var>
      </kap>
      <snc>
        <uzo tip="fak">MAT</uzo>
        <dif>
          La difino estas <ref cel="rikur.0o.indukto">rikura<sncref/></ref>:
          oni difinas la bazan klason kaj du
          <ref cel="operat.0o">operatorojn</ref>.
          La bazaj funkcioj estas:
          la konstanta funkcio <frm am="O(x)=0">O(x)=0</frm>;
          la <ref cel="krement.al0i">alkremento</ref>
          <frm am="S(x)=x+1">S(x)=x+1</frm>;
          la <ref cel="projek.0o.kanona">projekcioj</ref>
          <frm am="&quot;Pr&quot;[m,n](x_1,...x_n)=x_m,1 le m le           n">Pr[m,n](x<sub>1</sub>,&#x2026;x<sub>n</sub>)=x<sub>m</sub>,
          1&#x2264;m&#x2264;n</frm>.
          La operatoroj estas
          la <ref cel="lig.kun0o.MAT">kunligo<sncref/></ref> kaj la
          <ref cel="rekursi.primitiva0ilo">primitiva <tld/>ilo</ref>.
          Primitive <tld/>a funkcio estas baza primitive <tld/>a
          funkcio a&ubreve; rezulto de finifoja apliko de la operatoro(j):
          <ekz>
            <frm am="S(S(x))">S(S(x))</frm> estas primitive <tld/>a
            funkcio &ccirc;ar &gcirc;i
            estas kunligo de du alkrenentoj <klr>(&gcirc;i
            &jcirc;etas <frm am="x to x+2">x&#x2192;x+2</frm>)</klr>;
          </ekz><ekz>
            &ccirc;iuj primitive <tld/>aj funkcioj estas
            <ref cel="cxie.0afunkcio">&ccirc;ieaj funkcioj</ref>;
          </ekz><ekz>
            pliopo da nombroteoriaj funkcioj estas primitive <tld/>aj
            funkcioj.
          </ekz>
        </dif>
      </snc>
      <trd lng="be">&c_p;&c_r;&c_y;&c_m;&c_ib;&c_t;&c_y;&c_w;&c_n;&c_a;-&c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_w;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_y;&c_ja;</trd>
      <trd lng="en">primitive recursive function</trd>
      <trd lng="pl">funkcja pierwotnie  <ind>rekurencyjna</ind></trd>
      <trd lng="ru">&c_p;&c_r;&c_i;&c_m;&c_i;&c_t;&c_i;&c_v;&c_n;&c_o;-&c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_v;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_i;&c_ja;</trd>
    </drv>

    <drv mrk="rekursi.primitiva0ilo">
      <kap>primitiva <tld/>ilo</kap>
      <snc>
        <uzo tip="fak">MAT</uzo>
        <dif>
          <ref tip="sub" cel="operat.0o">Operatoro</ref>
          uzata en la difino de 
          <ref cel="rekursi.primitive0afunkcio">primitive <tld/>a
          funkcio</ref>, simila al
          <ref cel="iteraci.nombrila0o">nombrila iteracio</ref>;
          la formala  difino
          estas <ref cel="rikur.0o.indukto">rikura<sncref/></ref>.
          Estu <frm am="f">f</frm> funkcio
          <frm am="n">n</frm>-<ref cel="lok.0nombro.argumenta">loka</ref>,
          kaj <frm am="g">g</frm> funkcio <frm am="n+2">n+2</frm>-loka;
          tiam apliko de
          primitiva <tld/>ilo al la paro da funkcioj <frm am="(f,g)">(f,g)</frm>
          estas tia <frm am="n+2">n+2</frm>-loka funkcio <frm am="h">h</frm>, ke
          <em>baze:</em>
          <frm am="h(x_1,...,x_n,0)=f(x_1,...,x_n)">h(x<sub>1</sub>,&#x2026;,x<sub>n</sub>,0)=f(x<sub>1</sub>,&#x2026;,x<sub>n</sub>)</frm>;
          kaj <em>rikure:</em>
          <frm am="h(x_1,...x_n,y+1)=g(x_1,...x_n,y,h(x_1,...,x_n,y))">h(x<sub>1</sub>,&#x2026;,x<sub>n</sub>,y+1)
          =
            g(x<sub>1</sub>,&#x2026;,x<sub>n</sub>,y,h(x<sub>1</sub>,&#x2026;,x<sub>n</sub>,y))</frm>.
          <ekz>
            Estu <frm am="f(x)=&quot;Pr&quot;[1,1](x)=x">f(x)=Pr[1,1](x)=x</frm>
            kaj
            <frm am="g(x,y,z)=S(&quot;Pr&quot;[2,3](x,y,z))=S(y)">g(x,y,z)=
            S(Pr[2,3](x,y,z))=S(y)</frm>.
            Tiam <frm am="h(0,x)=x">h(0,x) = x</frm> kaj
            <frm am="h(S(y),x)=g(y,h(y,x),x)=S(h(y,x))">h(S(y),x) = g(y,h(y,x),x) = S(h(y,x))</frm>.
            Sekve <frm am="h(0,1)=1, h(1,1)=S(h(0,1))=2,             h(2,1)=S(h(1,1))=3">h(0,1)=1,
            h(1,1)=S(h(0,1))=2,
            h(2,1)=S(h(1,1))=3</frm>.
            Do, <frm am="h">h</frm>
            estas <ref cel="lok.du0a.operacio">2-loka</ref> primitive
            <tld/>a funkcio, nome <ctl>adicio</ctl>.
          </ekz>
        </dif>
      </snc>
      <trd lng="be">&c_a;&c_p;&c_e;&c_r;&c_a;&c_t;&c_a;&c_r; &c_p;&c_r;&c_y;&c_m;&c_ib;&c_t;&c_y;&c_w;&c_n;&c_a;&c_j; &c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_ib;</trd>
      <trd lng="en">primitive recursion</trd>
      <trd lng="pl">operator minimalizacji ograniczonej</trd>
      <trd lng="ru">&c_o;&c_p;&c_je;&c_r;&c_a;&c_t;&c_o;&c_r; &c_p;&c_r;&c_i;&c_m;&c_i;&c_t;&c_i;&c_v;&c_n;&c_o;&c_j; &c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_i;</trd>
    </drv>

    <drv mrk="rekursi.mu0afunkcio">
      <kap>&my;-<tld/>a funkcio,
        <var><kap>MRF</kap></var>,
        <var><kap>parta <tld/>a funkcio</kap></var>
      </kap>
      <snc>
        <uzo tip="fak">MAT</uzo>
        <dif>
          Funkcio difinta per la samaj rimedoj, kiel la
          <ref tip="sub" cel="rekursi.primitive0afunkcio">primitive
          <tld/>aj funkcioj</ref>,
          plus la &my;-<ref cel="operat.0o">operatoro</ref> de
          <ref cel="sercx.senbara0o">senbara ser&ccirc;o</ref>:
          <ekz>
            &ccirc;ar la minimumigo povas diver&gcirc;i, tial ne &ccirc;iuj &my;-<tld/>aj
            funkcioj estas &ccirc;ieaj;
          </ekz><ekz>
            anka&ubreve; nenie difinitaj (&ccirc;ie diver&gcirc;aj) funkcioj estas
            partaj <tld/>aj funkcioj.
          </ekz>
        </dif>
      </snc>
      <trd lng="be">&c_ch;&c_a;&c_s;&c_t;&c_k;&c_o;&c_v;&c_a; &c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_w;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_y;&c_ja;</trd>
      <trdgrp lng="en">
        <trd>partial recursive function</trd>
        <trd>&gt;<klr>(&my;-)</klr>recursive function</trd>
      </trdgrp>
      <trd lng="pl">funkcja cz&eogonek;&sacute;ciowo  <ind>rekurencyjna</ind></trd>
      <trd lng="ru">&c_ch;&c_a;&c_s;&c_t;&c_i;&c_ch;&c_n;&c_o; &c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_v;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_i;&c_ja;</trd>
    </drv>

    <drv mrk="rekursi.cxiea0afunkcio">
      <kap>&ccirc;iea <tld/>a funkcio,
        <var><kap>&Ccirc;RF</kap></var>
      </kap>
      <snc>
        <uzo tip="fak">MAT</uzo>
        <dif>
          <ref cel="rekursi.mu0afunkcio">&my;-<tld/>a funkcio</ref>
          kiu estas
          <ref cel="cxie.0afunkcio">&ccirc;iea funkcio</ref>:
          <ekz>
            &ccirc;iu <ref cel="rekursi.primitive0afunkcio">PRF</ref> estas
            &ccirc;iea <tld/>a funkcio;
          </ekz><ekz>
            ekzistas &ccirc;ieaj <tld/>aj funkcioj kiuj ne estas
            <ref cel="rekursi.primitive0afunkcio">primitive
            <tld/>aj</ref>.
          </ekz>
        </dif>
      </snc>
      <trd lng="be">&c_a;&c_g;&c_u;&c_l;&c_mol;&c_n;&c_a;&c_r;&c_e;&c_k;&c_u;&c_r;&c_s;&c_ib;&c_w;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_y;&c_ja;</trd>
      <trd lng="en">total recursive function</trd>
      <trd lng="pl">ca&lstroke;kowita funkcja <ind>rekurencyjna</ind></trd>
      <trd lng="ru">&c_o;&c_b;&c_shch;&c_je;&c_r;&c_je;&c_k;&c_u;&c_r;&c_s;&c_i;&c_v;&c_n;&c_a;&c_ja; &c_f;&c_u;&c_n;&c_k;&c_c;&c_i;&c_ja;</trd>
    </drv>

  </art>
<!--
$Log$
versio 1.8 2023/06/08 22:29:32
Vito Redsky: +trd pl 

versio 1.6 2021/04/30 07:03:14
Dmitri Gabinski: +trd be

versio 1.5 2020/02/13 22:10:21
Wolfram Diestel: formuloj per am

Revision 1.4  2018/11/24 15:10:14  revo
Damien Brucker: -eraro cxe ref en cel

Revision 1.3  2018/11/21 08:10:15  revo
Sergio Pokrovskij: -tajperaroj

Revision 1.2  2018/11/21 04:10:15  revo
Sergio Pokrovskij: +hierarkio

Revision 1.1  2018/11/10 11:10:14  revo
Sergio Pokrovskij: nova artikolo
-->
</vortaro>
