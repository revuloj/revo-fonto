#declare Tetraeder = intersection {
  plane {
    <0.577,0.577,-0.577>, 0.333
  }
  plane {
    <-0.577,0.577,0.577>, 0.333
  }
  plane {
    <0.577,-0.577,0.577>, 0.333
  }
  plane {
    <-0.577,-0.577,-0.577>, 0.333
  }
  bounded_by { sphere { 0, 1.001} }
}
#declare Tetraeder_Gitter = union {
  cylinder {
    <0.577,0.577,0.577>, <0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,0.577>, <-0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,0.577>, <-0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <0.577,-0.577,-0.577>, <-0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <-0.577,0.577,-0.577>, <-0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <-0.577,-0.577,0.577>, <0.577,-0.577,-0.577>, 0.008
  }
}

#declare Hexaeder = intersection {
  plane {
    <0.000,1.000,0.000>, 0.577
  }
  plane {
    <1.000,0.000,-0.000>, 0.577
  }
  plane {
    <0.000,-1.000,0.000>, 0.577
  }
  plane {
    <-1.000,0.000,0.000>, 0.577
  }
  plane {
    <0.000,0.000,-1.000>, 0.577
  }
  plane {
    <0.000,0.000,1.000>, 0.577
  }
  bounded_by { sphere { 0, 1.001 } }
}
#declare Hexaeder_Gitter = union {
  cylinder {
    <-0.577,0.577,-0.577>, <0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,-0.577>, <0.577,0.577,0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,0.577>, <-0.577,0.577,0.577>, 0.008
  }
  cylinder {
    <-0.577,0.577,0.577>, <-0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <-0.577,-0.577,-0.577>, <0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,-0.577,-0.577>, <0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <0.577,-0.577,0.577>, <-0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <-0.577,-0.577,0.577>, <-0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <-0.577,0.577,-0.577>, <-0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,-0.577>, <0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,0.577>, <0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <-0.577,0.577,0.577>, <-0.577,-0.577,0.577>, 0.008
  }
}

#declare Oktaeder = intersection {
  plane {
    <-0.816,0.577,0.000>, 0.577
  }
  plane {
    <0.000,0.577,-0.816>, 0.577
  }
  plane {
    <0.816,0.577,0.000>, 0.577
  }
  plane {
    <-0.000,0.577,0.816>, 0.577
  }
  plane {
    <-0.816,-0.577,0.000>, 0.577
  }
  plane {
    <-0.000,-0.577,-0.816>, 0.577
  }
  plane {
    <0.816,-0.577,0.000>, 0.577
  }
  plane {
    <0.000,-0.577,0.816>, 0.577
  }
  bounded_by { sphere { 0, 1.001 } }
}
#declare Oktaeder_Gitter = union {
  cylinder {
    <-0.707,0.000,0.707>, <-0.707,0.000,-0.707>, 0.008
  }
  cylinder {
    <-0.707,0.000,-0.707>, <0.707,0.000,-0.707>, 0.008
  }
  cylinder {
    <0.707,0.000,-0.707>, <0.707,0.000,0.707>, 0.008
  }
  cylinder {
    <0.707,0.000,0.707>, <-0.707,0.000,0.707>, 0.008
  }
  cylinder {
    <-0.707,0.000,0.707>, <0.000,1.000,0.000>, 0.008
  }
  cylinder {
    <-0.707,0.000,-0.707>, <0.000,1.000,0.000>, 0.008
  }
  cylinder {
    <0.707,0.000,-0.707>, <0.000,1.000,0.000>, 0.008
  }
  cylinder {
    <0.707,0.000,0.707>, <0.000,1.000,0.000>, 0.008
  }
  cylinder {
    <-0.707,0.000,0.707>, <0.000,-1.000,0.000>, 0.008
  }
  cylinder {
    <-0.707,0.000,-0.707>, <0.000,-1.000,0.000>, 0.008
  }
  cylinder {
    <0.707,0.000,-0.707>, <0.000,-1.000,0.000>, 0.008
  }
  cylinder {
    <0.707,0.000,0.707>, <0.000,-1.000,0.000>, 0.008
  }
}

#declare Dodekaeder = intersection {
  plane {
    <0.526,0.000,0.851>, 0.795
  }
  plane {
    <-0.000,0.851,0.526>, 0.795
  }
  plane {
    <0.000,0.851,-0.526>, 0.795
  }
  plane {
    <0.526,-0.000,-0.851>, 0.795
  }
  plane {
    <0.851,-0.526,0.000>, 0.795
  }
  plane {
    <0.851,0.526,0.000>, 0.795
  }
  plane {
    <0.000,-0.851,0.526>, 0.795
  }
  plane {
    <-0.526,0.000,0.851>, 0.795
  }
  plane {
    <-0.851,0.526,0.000>, 0.795
  }
  plane {
    <-0.526,-0.000,-0.851>, 0.795
  }
  plane {
    <-0.000,-0.851,-0.526>, 0.795
  }
  plane {
    <-0.851,-0.526,0.000>, 0.795
  }
  bounded_by { sphere { 0, 1.001 } }
}
#declare Dodekaeder_Gitter = union {
  cylinder {
    <0.577,0.577,0.577>, <0.000,0.357,0.934>, 0.008
  }
  cylinder {
    <0.000,0.357,0.934>, <-0.577,0.577,0.577>, 0.008
  }
  cylinder {
    <0.000,0.357,0.934>, <0.000,-0.357,0.934>, 0.008
  }
  cylinder {
    <0.000,-0.357,0.934>, <0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <0.000,-0.357,0.934>, <-0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,0.577>, <0.357,0.934,0.000>, 0.008
  }
  cylinder {
    <0.357,0.934,0.000>, <0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <0.357,0.934,0.000>, <-0.357,0.934,0.000>, 0.008
  }
  cylinder {
    <-0.357,0.934,0.000>, <-0.577,0.577,0.577>, 0.008
  }
  cylinder {
    <-0.357,0.934,0.000>, <-0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,0.577>, <0.934,0.000,0.357>, 0.008
  }
  cylinder {
    <0.934,0.000,0.357>, <0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <0.934,0.000,0.357>, <0.934,0.000,-0.357>, 0.008
  }
  cylinder {
    <0.934,0.000,-0.357>, <0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <0.934,0.000,-0.357>, <0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <-0.577,0.577,0.577>, <-0.934,0.000,0.357>, 0.008
  }
  cylinder {
    <-0.934,0.000,0.357>, <-0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <-0.934,0.000,0.357>, <-0.934,0.000,-0.357>, 0.008
  }
  cylinder {
    <-0.934,0.000,-0.357>, <-0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <-0.934,0.000,-0.357>, <-0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <0.577,-0.577,-0.577>, <0.357,-0.934,0.000>, 0.008
  }
  cylinder {
    <0.357,-0.934,0.000>, <0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <0.357,-0.934,0.000>, <-0.357,-0.934,0.000>, 0.008
  }
  cylinder {
    <-0.357,-0.934,0.000>, <-0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <-0.357,-0.934,0.000>, <-0.577,-0.577,0.577>, 0.008
  }
  cylinder {
    <0.577,0.577,-0.577>, <0.000,0.357,-0.934>, 0.008
  }
  cylinder {
    <0.000,0.357,-0.934>, <-0.577,0.577,-0.577>, 0.008
  }
  cylinder {
    <0.000,0.357,-0.934>, <0.000,-0.357,-0.934>, 0.008
  }
  cylinder {
    <0.000,-0.357,-0.934>, <0.577,-0.577,-0.577>, 0.008
  }
  cylinder {
    <0.000,-0.357,-0.934>, <-0.577,-0.577,-0.577>, 0.008
  }
}

#declare Ikosaeder = intersection {
  plane {
    <0.357,0.000,-0.934>, 0.795
  }
  plane {
    <-0.357,-0.000,-0.934>, 0.795
  }
  plane {
    <0.934,0.357,-0.000>, 0.795
  }
  plane {
    <0.934,-0.357,0.000>, 0.795
  }
  plane {
    <0.000,0.934,-0.357>, 0.795
  }
  plane {
    <-0.000,0.934,0.357>, 0.795
  }
  plane {
    <0.357,0.000,0.934>, 0.795
  }
  plane {
    <-0.357,0.000,0.934>, 0.795
  }
  plane {
    <-0.934,0.357,0.000>, 0.795
  }
  plane {
    <-0.934,-0.357,0.000>, 0.795
  }
  plane {
    <0.000,-0.934,-0.357>, 0.795
  }
  plane {
    <0.000,-0.934,0.357>, 0.795
  }
  plane {
    <0.577,0.577,-0.577>, 0.795
  }
  plane {
    <0.577,-0.577,-0.577>, 0.795
  }
  plane {
    <-0.577,-0.577,-0.577>, 0.795
  }
  plane {
    <-0.577,0.577,-0.577>, 0.795
  }
  plane {
    <0.577,0.577,0.577>, 0.795
  }
  plane {
    <-0.577,0.577,0.577>, 0.795
  }
  plane {
    <-0.577,-0.577,0.577>, 0.795
  }
  plane {
    <0.577,-0.577,0.577>, 0.795
  }
  bounded_by { sphere { 0, 1.001 } }
}
#declare Ikosaeder_Gitter = union {
  cylinder {
    <0.000,0.526,-0.851>, <0.000,-0.526,-0.851>, 0.008
  }
  cylinder {
    <0.000,0.526,-0.851>, <0.851,0.000,-0.526>, 0.008
  }
  cylinder {
    <0.000,-0.526,-0.851>, <0.851,0.000,-0.526>, 0.008
  }
  cylinder {
    <0.000,0.526,-0.851>, <-0.851,0.000,-0.526>, 0.008
  }
  cylinder {
    <0.000,-0.526,-0.851>, <-0.851,0.000,-0.526>, 0.008
  }
  cylinder {
    <0.851,0.000,-0.526>, <0.851,0.000,0.526>, 0.008
  }
  cylinder {
    <0.851,0.000,-0.526>, <0.526,0.851,0.000>, 0.008
  }
  cylinder {
    <0.851,0.000,0.526>, <0.526,0.851,0.000>, 0.008
  }
  cylinder {
    <0.851,0.000,-0.526>, <0.526,-0.851,0.000>, 0.008
  }
  cylinder {
    <0.851,0.000,0.526>, <0.526,-0.851,0.000>, 0.008
  }
  cylinder {
    <-0.526,0.851,0.000>, <0.526,0.851,0.000>, 0.008
  }
  cylinder {
    <-0.526,0.851,0.000>, <0.000,0.526,-0.851>, 0.008
  }
  cylinder {
    <0.526,0.851,0.000>, <0.000,0.526,-0.851>, 0.008
  }
  cylinder {
    <-0.526,0.851,0.000>, <0.000,0.526,0.851>, 0.008
  }
  cylinder {
    <0.526,0.851,0.000>, <0.000,0.526,0.851>, 0.008
  }
  cylinder {
    <0.000,0.526,0.851>, <0.000,-0.526,0.851>, 0.008
  }
  cylinder {
    <0.000,0.526,0.851>, <0.851,0.000,0.526>, 0.008
  }
  cylinder {
    <0.000,-0.526,0.851>, <0.851,0.000,0.526>, 0.008
  }
  cylinder {
    <0.000,0.526,0.851>, <-0.851,0.000,0.526>, 0.008
  }
  cylinder {
    <0.000,-0.526,0.851>, <-0.851,0.000,0.526>, 0.008
  }
  cylinder {
    <-0.851,0.000,-0.526>, <-0.851,0.000,0.526>, 0.008
  }
  cylinder {
    <-0.851,0.000,-0.526>, <-0.526,0.851,0.000>, 0.008
  }
  cylinder {
    <-0.851,0.000,0.526>, <-0.526,0.851,0.000>, 0.008
  }
  cylinder {
    <-0.851,0.000,-0.526>, <-0.526,-0.851,0.000>, 0.008
  }
  cylinder {
    <-0.851,0.000,0.526>, <-0.526,-0.851,0.000>, 0.008
  }
  cylinder {
    <-0.526,-0.851,0.000>, <0.526,-0.851,0.000>, 0.008
  }
  cylinder {
    <-0.526,-0.851,0.000>, <0.000,-0.526,-0.851>, 0.008
  }
  cylinder {
    <0.526,-0.851,0.000>, <0.000,-0.526,-0.851>, 0.008
  }
  cylinder {
    <-0.526,-0.851,0.000>, <0.000,-0.526,0.851>, 0.008
  }
  cylinder {
    <0.526,-0.851,0.000>, <0.000,-0.526,0.851>, 0.008
  }
}


#declare Material = texture {
      pigment  { color rgbf <0.9,0.9,0.9,0.2> }
/*      finish   { ambient 0.2 diffuse 0.8 specular 1.3 }*/
}

#declare Material_Kanten = texture {
      pigment  { color rgb <0,0,0> }
}


global_settings {
  adc_bailout 0.0039216
  assumed_gamma 2
  }

/*
light_source {
    <10,10,-10>, rgb <1,1,1>
    shadowless
    }

light_source {
    <-10,15,-10>, rgb <1,1,1>
    shadowless
    }
*/

light_source {
    <0,0,-10>, rgb 1
    shadowless
    }

light_source {
    <10,10,-5>, rgb 1
    shadowless
    }

camera {
    orthographic
    up <0,6,0>
    right <6,0,0>
    location <0,-.5,-8>
    look_at  <0,-.5,0>
}

plane { z, 5 pigment { color rgb <1,1,1> } }

object {
    Tetraeder
      rotate <5,70,55>
      translate <0,1.4,0> 
      texture { Material }
    }

object {
    Tetraeder_Gitter
      rotate <5,70,55>
      translate <0,1.4,0> 
      texture { Material_Kanten }
    }

object {
    Hexaeder
       rotate <10,40,0>
       translate <-1,0,0>
       texture { Material }
    }

object {
    Hexaeder_Gitter
       rotate <10,40,0>
       translate <-1,0,0>
      texture { Material_Kanten }
    }

object {
    Oktaeder
      rotate <0,35,0>
      translate <1.2,0,0>
      texture { Material }
    }

object {
    Oktaeder_Gitter
      rotate <0,35,0>
      translate <1.2,0,0>
      texture { Material_Kanten }
    }

object {
    Dodekaeder
      rotate <10,20,0>
      translate <-1,-2,0>
      texture { Material }
    }

object {
    Dodekaeder_Gitter
      rotate <10,20,0>
      translate <-1,-2,0>
      texture { Material_Kanten }
    }

object {
    Ikosaeder
      rotate <0,10,0>
      translate <1.2,-2,0>
      texture { Material }
    }

object {
    Ikosaeder_Gitter
      rotate <0,10,0>
      translate <1.2,-2,0>
      texture { Material_Kanten }
    }


