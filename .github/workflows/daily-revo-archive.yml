name: make-daily-revo-archive

on:
  schedule:
  # ĉiumatene, devas esti post rekreo de la eldono poer make-daily-release (30min devus esti sekura...)
  # se make-daily-release fiaskas, tiam Revo-Zip aldoniĝos al la malnova eldono, tio eble ne estas problemo
  # dum iom da tempo (ĉ. 1 horo) ne ekzistas Revo-ZIP, ĉar la malnova eldono foriĝis kaj tiu ĉi estas ankoraŭ ne preta
  # do se vi bezonas ĝin prenu ĝin ne lunde matene antaŭ 9:30 UTC, sed pli poste...
  
  # * estas speciala signo, do nepre uzu citilojn
  - cron:  '45 8 * * *'
  #- cron:  '34 19 * * 2'

# https://github.com/actions/create-release
# https://help.github.com/en/actions/reference/development-tools-for-github-actions
# https://github.com/actions/github-script

jobs:

  revo-med-inx-tez:
    #needs: release
    runs-on: ubuntu-latest

    steps:

    - name: "Hodiaŭ..."
      run: |
        Tagoj=(Dimanĉo Lundo Mardo Merkredo Ĵaudo Vendredo Sabato)
        echo "::set-env name=TAGO::${Tagoj[ $(date +'%w') ]}"

    - uses: actions/github-script@0.4.0
      name: Eltrovu la nunan pozicion (kapo)
      id: trovu_kapon
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({...context.repo, ref: 'heads/master'})
          const sha = ref.data.object.sha
          console.log('heads/master estas ĉe: '+sha)
          console.log('::set-output name=sha_hm::'+sha)

    # https://github.community/t5/GitHub-Actions/Use-docker-images-from-GitHub-Package-Registry/td-p/30407    
    # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml    
    - name: Saluto al docker.pkg.github.com kaj preni voko-formiko
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        docker pull "docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest"

    # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
    - name: Kreu dosierujojn por konservi la rezultojn ...
      run: |
        mkdir .tgz
        mkdir .log

    - name: Kreu la med,inx,tez 
      run: docker run -u1001
        -e GIT_REPO_REVO=https://github.com/revuloj/revo-fonto.git
        -v $GITHUB_WORKSPACE/.tgz:/home/formiko/tgz
        -v $GITHUB_WORKSPACE/.log:/home/formiko/log
        docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest formiko
        -Dsha=${{ steps.trovu_kapon.outputs.sha_hm }}
        srv-servo-github-medinxtez

    - name: Rigardu la rezulton
      run: |
        #tar -czf revo.tgz $GITHUB_WORKSPACE/revo
        ls -l .tgz/ .log/

    - name: Konservu rezultintajn arĥivojn
      uses: actions/upload-artifact@v1
      with:
        name: tgz-i
        path: .tgz

    - name: Konservu protokolojn
      uses: actions/upload-artifact@v1
      with:
        name: log-i
        path: .log
        
    - name: Eltrovu la URL de la hodiaŭa eldono
      uses: actions/github-script@0.4.0
      id: retrieve_release
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
            const release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,            
                tag: 'v${{ env.TAGO }}'
            })
            const upload_url = release.data.upload_url            
            console.log('UploadURL is: '+upload_url)
            console.log('::set-output name=upload_url::'+upload_url)

    - name: Retrovu la rezultintan ZIP-dosierujon
      id: revo_zip
      run: |
        ls -l $GITHUB_WORKSPACE/.tgz
        echo "::set-output name=revohtml::$(basename -- .tgz/revohtml_20*)"

    - name: Alpendigu revo-zip al la hodiaŭa eldono
      id: upload-zip 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.retrieve_release.outputs.upload_url }} 
        asset_path: .tgz/${{ steps.revo_zip.outputs.revohtml }}
        asset_name: ${{ steps.revo_zip.outputs.revohtml }}
        asset_content_type: application/zip        

  revo-art:
    #needs: release
    runs-on: ubuntu-latest

    steps:

    - name: "Hodiaŭ..."
      run: |
        Tagoj=(Dimanĉo Lundo Mardo Merkredo Ĵaudo Vendredo Sabato)
        echo "::set-env name=TAGO::${Tagoj[ $(date +'%w') ]}"

    - uses: actions/github-script@0.4.0
      name: Eltrovu la nunan pozicion (kapo)
      id: trovu_kapon
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({...context.repo, ref: 'heads/master'})
          const sha = ref.data.object.sha
          console.log('heads/master estas ĉe: '+sha)
          console.log('::set-output name=sha_hm::'+sha)

    # https://github.community/t5/GitHub-Actions/Use-docker-images-from-GitHub-Package-Registry/td-p/30407    
    # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml    
    - name: Saluto al docker.pkg.github.com kaj preni voko-formiko
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        docker pull "docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest"

    # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
    - name: Kreu dosierujojn por konservi la rezultojn ...
      run: |
        mkdir .tgz
        mkdir .log

    - name: Kreu la artikolojn 
      run: docker run -u1001
        -e GIT_REPO_REVO=https://github.com/revuloj/revo-fonto.git
        -v $GITHUB_WORKSPACE/.tgz:/home/formiko/tgz
        -v $GITHUB_WORKSPACE/.log:/home/formiko/log
        docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest formiko
        -Dsha=${{ steps.trovu_kapon.outputs.sha_hm }}
        srv-servo-github-art

    - name: Rigardu la rezulton
      run: |
        #tar -czf revo.tgz $GITHUB_WORKSPACE/revo
        ls -l .tgz/ .log/

    - name: Konservu rezultintajn arĥivojn
      uses: actions/upload-artifact@v1
      with:
        name: tgz-a
        path: .tgz

    - name: Konservu protokolojn
      uses: actions/upload-artifact@v1
      with:
        name: log-a
        path: .log
        
    - name: Eltrovu la URL de la hodiaŭa eldono
      uses: actions/github-script@0.4.0
      id: retrieve_release
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
            const release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,            
                tag: 'v${{ env.TAGO }}'
            })
            const upload_url = release.data.upload_url            
            console.log('UploadURL is: '+upload_url)
            console.log('::set-output name=upload_url::'+upload_url)

    - name: Retrovu la rezultintan ZIP-dosierujon
      id: revo_zip
      run: |
        ls -l $GITHUB_WORKSPACE/.tgz
        echo "::set-output name=revohtml::$(basename -- .tgz/revoart_20*)"

    - name: Alpendigu revo-zip al la hodiaŭa eldono
      id: upload-zip 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.retrieve_release.outputs.upload_url }} 
        asset_path: .tgz/${{ steps.revo_zip.outputs.revohtml }}
        asset_name: ${{ steps.revo_zip.outputs.revohtml }}
        asset_content_type: application/zip        

  revo-hst:
    #needs: release
    runs-on: ubuntu-latest

    steps:

    - name: "Hodiaŭ..."
      run: |
        Tagoj=(Dimanĉo Lundo Mardo Merkredo Ĵaudo Vendredo Sabato)
        echo "::set-env name=TAGO::${Tagoj[ $(date +'%w') ]}"

    - uses: actions/github-script@0.4.0
      name: Eltrovu la nunan pozicion (kapo)
      id: trovu_kapon
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({...context.repo, ref: 'heads/master'})
          const sha = ref.data.object.sha
          console.log('heads/master estas ĉe: '+sha)
          console.log('::set-output name=sha_hm::'+sha)

    # https://github.community/t5/GitHub-Actions/Use-docker-images-from-GitHub-Package-Registry/td-p/30407    
    # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml    
    - name: Saluto al docker.pkg.github.com kaj preni voko-formiko
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        docker pull "docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest"

    # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
    - name: Kreu dosierujojn por konservi la rezultojn ...
      run: |
        mkdir .tgz
        mkdir .log

    - name: Kreu la historiojn 
      run: docker run -u1001
        -e GIT_REPO_REVO=https://github.com/revuloj/revo-fonto.git
        -v $GITHUB_WORKSPACE/.tgz:/home/formiko/tgz
        -v $GITHUB_WORKSPACE/.log:/home/formiko/log
        docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest formiko
        -Dsha=${{ steps.trovu_kapon.outputs.sha_hm }}
        srv-servo-github-hst

    - name: Rigardu la rezulton
      run: |
        #tar -czf revo.tgz $GITHUB_WORKSPACE/revo
        ls -l .tgz/ .log/

    - name: Konservu rezultintajn arĥivojn
      uses: actions/upload-artifact@v1
      with:
        name: tgz-h
        path: .tgz

    - name: Konservu protokolojn
      uses: actions/upload-artifact@v1
      with:
        name: log-h
        path: .log
        
    - name: Eltrovu la URL de la hodiaŭa eldono
      uses: actions/github-script@0.4.0
      id: retrieve_release
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
            const release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,            
                tag: 'v${{ env.TAGO }}'
            })
            const upload_url = release.data.upload_url            
            console.log('UploadURL is: '+upload_url)
            console.log('::set-output name=upload_url::'+upload_url)

    - name: Retrovu la rezultintan ZIP-dosierujon
      id: revo_zip
      run: |
        ls -l $GITHUB_WORKSPACE/.tgz
        echo "::set-output name=revohtml::$(basename -- .tgz/revohst_20*)"

    - name: Alpendigu revo-zip al la hodiaŭa eldono
      id: upload-zip 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.retrieve_release.outputs.upload_url }} 
        asset_path: .tgz/${{ steps.revo_zip.outputs.revohtml }}
        asset_name: ${{ steps.revo_zip.outputs.revohtml }}
        asset_content_type: application/zip        

