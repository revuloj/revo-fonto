name: nokta-aktualigo

on:
  schedule:
  # ĉiunokte
  
  # * estas speciala signo, do nepre uzu citilojn
  - cron:  '15 22 * * *'
  #- cron:  '34 19 * * 2'

jobs:

  revo-aktualigo:
    #needs: release
    runs-on: ubuntu-latest

    steps:

    - uses: actions/github-script@0.4.0
      name: Eltrovu la pozicion de marko 'nokta-formiko'
      id: trovu_noktan_formikon
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({...context.repo, ref: 'tags/nokta-formiko'})
          const sha = ref.data.object.sha
          console.log('nokta-formiko estas ĉe: '+sha)
          console.log('::set-output name=sha_nf::'+sha)

    - uses: actions/github-script@0.4.0
      name: Eltrovu la nunan pozicion (kapo)
      id: trovu_kapon
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
          const ref = await github.git.getRef({...context.repo, ref: 'heads/master'})
          const sha = ref.data.object.sha
          console.log('heads/master estas ĉe: '+sha)
          console.log('::set-output name=sha_hm::'+sha)

    # https://github.community/t5/GitHub-Actions/Use-docker-images-from-GitHub-Package-Registry/td-p/30407    
    # https://github.com/actions/starter-workflows/blob/master/ci/docker-push.yml    
    - name: Saluto al docker.pkg.github.com kaj preni voko-formiko
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      run: |
        docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
        docker pull "docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest"

    - name: Kreu dosierujojn por konservi la rezultojn ...
      run: |
        mkdir .tgz
        mkdir .log

    - name: Kreu la tutan vortaron ĉe nokta-formiko kaj HEAD kaj arĥivu la diferencon
      if: steps.trovu_noktan_formikon.outputs.sha_nf != steps.trovu_kapon.outputs.sha_hm
      run: docker run -u1001
        -e GIT_REPO_REVO=https://github.com/revuloj/revo-fonto.git
        -e FTP_SERVER=cyberwebserver-21.de
        -e FTP_USER=${{ secrets.FTP_USER }}
        -e FTP_PASSWD=${{ secrets.FTP_PASSWD }}
        -e CGI_SERVER=reta-vortaro.de
        -e CGI_USER=${{ secrets.CGI_USER }}
        -e CGI_PASSWD=${{ secrets.CGI_PASSWD }}
        -v $GITHUB_WORKSPACE/.tgz:/home/formiko/tgz
        -v $GITHUB_WORKSPACE/.log:/home/formiko/log
        docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest formiko
        -Dsha1=${{ steps.trovu_kapon.outputs.sha_nf }} 
        -Dsha2=${{ steps.trovu_kapon.outputs.sha_hm }}
        srv-servo-github-diurne

    - name: Rigardu la rezulton
      run: |
        #tar -czf revo.tgz $GITHUB_WORKSPACE/revo
        ls -l .tgz/ .log/

    - name: Konservu rezultintajn arĥivojn
      uses: actions/upload-artifact@v1
      with:
        name: tgz
        path: .tgz

    - name: Konservu protokolojn
      uses: actions/upload-artifact@v1
      with:
        name: log
        path: .log
        

    - uses: actions/github-script@0.4.0
      name: Movu antaŭen la formikon
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        debug: true
        script: |
          var result = {};
          try {
            result = await github.git.updateRef({  
              owner: context.repo.owner,
              repo: context.repo.repo,            
              sha: '${{ steps.trovu_kapon.outputs.sha_hm }}',
              ref: 'tags/nokta-formiko',
              force: true })
          } catch(error) {
            console.log("ERROR:");
          }
          console.log("RESULT...")
          console.log(result)        
