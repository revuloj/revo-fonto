name: make-weekly-revo-zip

on:
  schedule:
  # ĉiulunde matene, devas esti post rekreo de la eldono poer make-daily-release (30min devus esti sekura...)
  # se make-daily-release fiaskas, tiam Revo-Zip aldoniĝos al la malnova eldono, tio eble ne estas problemo
  # dum iom da tempo (ĉ. 1 horo) ne ekzistas Revo-ZIP, ĉar la malnova eldono foriĝis kaj tiu ĉi estas ankoraŭ ne preta
  # do se vi bezonas ĝin prenu ĝin ne lunde matene antaŭ 9:30 UTC, sed pli poste...
  
  # * estas speciala signo, do nepre uzu citilojn
  - cron:  '45 8 * * 1'
  #- cron:  '34 19 * * 2'

# https://github.com/actions/create-release
# https://help.github.com/en/actions/reference/development-tools-for-github-actions
# https://github.com/actions/github-script

jobs:

  revo-zip:
    #needs: release
    runs-on: ubuntu-latest

    steps:

    - name: "Hodiaŭ..."
      run: |
        Tagoj=(Dimanĉo Lundo Mardo Merkredo Ĵaudo Vendredo Sabato)
        echo "::set-env name=TAGO::${Tagoj[ $(date +'%w') ]}"

    - name: Eltrovu la URL de la hodiaŭa eldono
      uses: actions/github-script@0.4.0
      id: retrieve_release
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        debug: true
        script: |
            const release = await github.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,            
                tag: 'v${{ env.TAGO }}'
            })
            const upload_url = release.data.upload_url            
            console.log('UploadURL is: '+upload_url)
            console.log('::set-output name=upload_url::'+upload_url)

    - name: Saluto al docker.pkg.github.com
      run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
      env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Prenu procesumon voko-formiko
      run: docker pull "docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest"
    - name: Kreu dosierujon por konservi la rezultojn ...
      run: |
        mkdir $GITHUB_WORKSPACE/tgz
    - name: Kreu la tutan vortaron
      run: docker run 
        -e GIT_REPO_REVO=https://github.com/revuloj/revo-fonto.git
        -v $GITHUB_WORKSPACE/tgz:/home/formiko/tgz
        docker.pkg.github.com/revuloj/voko-formiko/voko-formiko:latest 
        formiko srv-servo-github
    - name: Retrovu la rezultintan ZIP-dosierujon
      id: revo_zip
      run: |
        ls -l $GITHUB_WORKSPACE/tgz
        echo "::set-output name=revohtml::$(basename -- tgz/revohtml_20*)"
    - name: Alpendigu revo-zip
      id: upload-zip 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.retrieve_release.outputs.upload_url }} 
        asset_path: tgz/${{ steps.revo_zip.outputs.revohtml }}
        asset_name: ${{ steps.revo_zip.outputs.revohtml }}
        asset_content_type: application/zip

# about download: https://help.github.com/en/github/administering-a-repository/linking-to-releases
# verŝajne ni devos eltrovi per Github-API, almenaŭ ni devos scii la daton por scii la nomon de ZIP-dosiero!
# https://github.com/revuloj/revo-fonto/releases/latest/download/<asset-name.zip>

# https://developer.github.com/v3/repos/releases/#get-the-latest-release
# GET /repos/:owner/:repo/releases/latest
# t.e. GET https://api.github.com/repos/revuloj/revo-fonto/releases/latest
#
# data.assets.name = xxxx.zip
# data.assets.browser_download_url


# ĉu ni bezonas saluti nur por legi? Eble ne,...
# alternative ni povus aldoni dosier-liston al la eldono por eviti neceson de API-Token
